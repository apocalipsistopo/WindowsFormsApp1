//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp1.ServiceReference1 {
    using System;
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.WebService4Soap")]
    public interface WebService4Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarCustomerDemographics", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListarCustomerDemographics();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarCustomerDemographics", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListarCustomerDemographicsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarCustomerDemographics", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] AgregarCustomerDemographics(string CustomerTypeID, string CustomerDesc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarCustomerDemographics", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> AgregarCustomerDemographicsAsync(string CustomerTypeID, string CustomerDesc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarCustomerDemographics", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ActualizarCustomerDemographics(string CustomerTypeID, string CustomerDesc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarCustomerDemographics", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ActualizarCustomerDemographicsAsync(string CustomerTypeID, string CustomerDesc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarCustomerDemographics", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] EliminarCustomerDemographics(string CustomerTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarCustomerDemographics", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> EliminarCustomerDemographicsAsync(string CustomerTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarCustomerDemographics", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarCustomerDemographics(string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarCustomerDemographics", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarCustomerDemographicsAsync(string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarRegion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListarRegion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarRegion", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListarRegionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarRegion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] AgregarRegion(int RegionID, string RegionDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarRegion", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> AgregarRegionAsync(int RegionID, string RegionDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarRegion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ActualizarRegion(int RegionID, string RegionDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarRegion", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ActualizarRegionAsync(int RegionID, string RegionDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarRegion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] EliminarRegion(int RegionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarRegion", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> EliminarRegionAsync(int RegionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarRegion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarRegion(int RegionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarRegion", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarRegionAsync(int RegionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarShippers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListarShippers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarShippers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListarShippersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarShippers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] AgregarShippers(int ShipperID, string CompanyName, string Phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarShippers", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> AgregarShippersAsync(int ShipperID, string CompanyName, string Phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarShippers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ActualizarShippers(int ShipperID, string CompanyName, string Phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarShippers", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ActualizarShippersAsync(int ShipperID, string CompanyName, string Phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarShippers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] EliminarShippers(int ShipperID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarShippers", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> EliminarShippersAsync(int ShipperID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarShippers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarShippers(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarShippers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarShippersAsync(string texto, string criterio);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService4SoapChannel : WindowsFormsApp1.ServiceReference1.WebService4Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService4SoapClient : System.ServiceModel.ClientBase<WindowsFormsApp1.ServiceReference1.WebService4Soap>, WindowsFormsApp1.ServiceReference1.WebService4Soap {
        
        public WebService4SoapClient() {
        }
        
        public WebService4SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService4SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService4SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService4SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet ListarCustomerDemographics() {
            return base.Channel.ListarCustomerDemographics();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListarCustomerDemographicsAsync() {
            return base.Channel.ListarCustomerDemographicsAsync();
        }
        
        public string[] AgregarCustomerDemographics(string CustomerTypeID, string CustomerDesc) {
            return base.Channel.AgregarCustomerDemographics(CustomerTypeID, CustomerDesc);
        }
        
        public System.Threading.Tasks.Task<string[]> AgregarCustomerDemographicsAsync(string CustomerTypeID, string CustomerDesc) {
            return base.Channel.AgregarCustomerDemographicsAsync(CustomerTypeID, CustomerDesc);
        }
        
        public string[] ActualizarCustomerDemographics(string CustomerTypeID, string CustomerDesc) {
            return base.Channel.ActualizarCustomerDemographics(CustomerTypeID, CustomerDesc);
        }
        
        public System.Threading.Tasks.Task<string[]> ActualizarCustomerDemographicsAsync(string CustomerTypeID, string CustomerDesc) {
            return base.Channel.ActualizarCustomerDemographicsAsync(CustomerTypeID, CustomerDesc);
        }
        
        public string[] EliminarCustomerDemographics(string CustomerTypeID) {
            return base.Channel.EliminarCustomerDemographics(CustomerTypeID);
        }
        
        public System.Threading.Tasks.Task<string[]> EliminarCustomerDemographicsAsync(string CustomerTypeID) {
            return base.Channel.EliminarCustomerDemographicsAsync(CustomerTypeID);
        }
        
        public System.Data.DataSet BuscarCustomerDemographics(string texto) {
            return base.Channel.BuscarCustomerDemographics(texto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarCustomerDemographicsAsync(string texto) {
            return base.Channel.BuscarCustomerDemographicsAsync(texto);
        }
        
        public System.Data.DataSet ListarRegion() {
            return base.Channel.ListarRegion();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListarRegionAsync() {
            return base.Channel.ListarRegionAsync();
        }
        
        public string[] AgregarRegion(int RegionID, string RegionDescription) {
            return base.Channel.AgregarRegion(RegionID, RegionDescription);
        }
        
        public System.Threading.Tasks.Task<string[]> AgregarRegionAsync(int RegionID, string RegionDescription) {
            return base.Channel.AgregarRegionAsync(RegionID, RegionDescription);
        }
        
        public string[] ActualizarRegion(int RegionID, string RegionDescription) {
            return base.Channel.ActualizarRegion(RegionID, RegionDescription);
        }
        
        public System.Threading.Tasks.Task<string[]> ActualizarRegionAsync(int RegionID, string RegionDescription) {
            return base.Channel.ActualizarRegionAsync(RegionID, RegionDescription);
        }
        
        public string[] EliminarRegion(int RegionID) {
            return base.Channel.EliminarRegion(RegionID);
        }
        
        public System.Threading.Tasks.Task<string[]> EliminarRegionAsync(int RegionID) {
            return base.Channel.EliminarRegionAsync(RegionID);
        }
        
        public System.Data.DataSet BuscarRegion(int RegionID) {
            return base.Channel.BuscarRegion(RegionID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarRegionAsync(int RegionID) {
            return base.Channel.BuscarRegionAsync(RegionID);
        }
        
        public System.Data.DataSet ListarShippers() {
            return base.Channel.ListarShippers();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListarShippersAsync() {
            return base.Channel.ListarShippersAsync();
        }
        
        public string[] AgregarShippers(int ShipperID, string CompanyName, string Phone) {
            return base.Channel.AgregarShippers(ShipperID, CompanyName, Phone);
        }
        
        public System.Threading.Tasks.Task<string[]> AgregarShippersAsync(int ShipperID, string CompanyName, string Phone) {
            return base.Channel.AgregarShippersAsync(ShipperID, CompanyName, Phone);
        }
        
        public string[] ActualizarShippers(int ShipperID, string CompanyName, string Phone) {
            return base.Channel.ActualizarShippers(ShipperID, CompanyName, Phone);
        }
        
        public System.Threading.Tasks.Task<string[]> ActualizarShippersAsync(int ShipperID, string CompanyName, string Phone) {
            return base.Channel.ActualizarShippersAsync(ShipperID, CompanyName, Phone);
        }
        
        public string[] EliminarShippers(int ShipperID) {
            return base.Channel.EliminarShippers(ShipperID);
        }
        
        public System.Threading.Tasks.Task<string[]> EliminarShippersAsync(int ShipperID) {
            return base.Channel.EliminarShippersAsync(ShipperID);
        }
        
        public System.Data.DataSet BuscarShippers(string texto, string criterio) {
            return base.Channel.BuscarShippers(texto, criterio);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarShippersAsync(string texto, string criterio) {
            return base.Channel.BuscarShippersAsync(texto, criterio);
        }

        internal object EliminarCustomerDemographics(int id)
        {
            throw new NotImplementedException();
        }
    }
}
